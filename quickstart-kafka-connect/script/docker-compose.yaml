# docker compose -f docker-compose.yaml up -d
# docker compose down
# docker compose stop
# docker compose rm

# docker compose stop kafka
# docker compose rm kafka
# docker compose -f docker-compose.yaml up -d kafka

# docker exec -it kafka bash
# docker exec -it kafka-zookeeper bash
# docker exec -it kafka-mysql bash
# docker exec -it kafka-redis bash

version: '3.7'
services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: kafka-zookeeper
    ports:
      - 2182:2181

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 0
      # 宿主机ip
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_ZOOKEEPER_CONNECT: kafka-zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      - zookeeper

  mysql:
    hostname: mysql
    image: mysql:5.7.26
    # network_mode: "host" # 如果需要容器使用宿主机IP(内网IP)，则可以配置此项
    container_name: kafka-mysql # 指定容器名称，如果不设置此参数，则由系统自动生成
    restart: unless-stopped # 设置容器自启模式
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci # 设置utf8字符集
    environment:
      - TZ=Asia/Shanghai # 设置容器时区与宿主机保持一致
      - MYSQL_ROOT_PASSWORD=root # 设置root密码
#    volumes:
#      - /etc/localtime:/etc/localtime:ro # 设置容器时区与宿主机保持一致
#      - ./mysql/data:/var/lib/mysql/data # 映射数据库保存目录到宿主机，防止数据丢失
#      - ./mysql/my.cnf:/etc/mysql/my.cnf # 映射数据库配置文件
    ports:
      - 3306:3306

  redis:
    image: redis
    container_name: kafka-redis
    ports:
      - 6379:6379
#    volumes:
#      - ./redis.conf:/etc/redis/redis.conf
#      - ./data:/data
    command: redis-server --appendonly yes
    privileged: true
