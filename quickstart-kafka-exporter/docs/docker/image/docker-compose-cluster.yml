# docker compose -f docker-compose-cluster.yml up -d
# docker compose -f docker-compose-cluster.yml down
# docker-compose restart prometheus
#  docker logs prometheus


version: '3.4'

services:
  zoo1:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zoo1
    container_name: zoo1
    ports:
      - 2184:2181
    #    volumes:
    #      - "/Users/lengfeng/kafka/zkcluster/zoo1/data:/data"
    #      - "/Users/lengfeng/kafka/zkcluster/zoo1/datalog:/datalog"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  #        networks:
  #            kafka:
  #                ipv4_address: 172.30.0.11

  zoo2:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zoo2
    container_name: zoo2
    ports:
      - 2185:2181
    #    volumes:
    #      - "/Users/lengfeng/kafka/zkcluster/zoo2/data:/data"
    #      - "/Users/lengfeng/kafka/zkcluster/zoo2/datalog:/datalog"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
    #        networks:
    #            kafka:
    #                ipv4_address: 172.30.0.12

  zoo3:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zoo3
    container_name: zoo3
    ports:
      - 2186:2181
    #    volumes:
    #      - "/Users/lengfeng/kafka/zkcluster/zoo3/data:/data"
    #      - "/Users/lengfeng/kafka/zkcluster/zoo3/datalog:/datalog"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181
  #        networks:
  #            kafka:
  #                ipv4_address: 172.30.0.13


  kafka1:
    image: quickstart/kafka:2.0
#    image: wurstmeister/kafka
    restart: always
    hostname: kafka1
    container_name: kafka1
    privileged: true
    ports:
      - 9092:9092
      - 7071:7071 # 镜像quickstart/kafka:2.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      # 镜像quickstart/kafka:2.0
      # JMX exporters default 9404
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml
    volumes:
      - /etc/localtime:/etc/localtime
    #      - /home/zk/workspace/volumes/kafkaCluster/kafka1/logs:/kafka
    #    networks:
    #      kafka:
    #        ipv4_address: 172.30.1.11
    #    extra_hosts:
    #      - "zoo1:172.30.0.11"
    #      - "zoo2:172.30.0.12"
    #      - "zoo3:172.30.0.13"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
  #    external_links:
  #      - zoo1
  #      - zoo2
  #      - zoo3

  kafka2:
#    image: wurstmeister/kafka
    image: quickstart/kafka:2.0
    restart: always
    hostname: kafka2
    container_name: kafka2
    privileged: true
    ports:
      - 9093:9093
      - 7072:7072 # 镜像quickstart/kafka:2.0
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      # 镜像quickstart/kafka:2.0
      # JMX exporters default 9404
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7072:/usr/app/prom-jmx-agent-config.yml
    volumes:
      - /etc/localtime:/etc/localtime
    #      - /home/zk/workspace/volumes/kafkaCluster/kafka2/logs:/kafka
    #    networks:
    #      kafka:
    #        ipv4_address: 172.30.1.12
    #    extra_hosts:
    #      - "zoo1:172.30.0.11"
    #      - "zoo2:172.30.0.12"
    #      - "zoo3:172.30.0.13"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
  #    external_links:
  #      - zoo1
  #      - zoo2
  #      - zoo3

  kafka3:
#    image: wurstmeister/kafka
    image: quickstart/kafka:2.0
    restart: always
    hostname: kafka3
    container_name: kafka3
    privileged: true
    ports:
      - 9094:9094
      - 7073:7073 # 镜像quickstart/kafka:2.0
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_HOST_NAME: kafka3
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      # 镜像quickstart/kafka:2.0，
      # JMX exporters default 9404
      KAFKA_OPTS: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7073:/usr/app/prom-jmx-agent-config.yml
    volumes:
      - /etc/localtime:/etc/localtime
    #      - /home/zk/workspace/volumes/kafkaCluster/kafka3/logs:/kafka
    #    networks:
    #      kafka:
    #        ipv4_address: 172.30.1.13
    #    extra_hosts:
    #      - "zoo1:172.30.0.11"
    #      - "zoo2:172.30.0.12"
    #      - "zoo3:172.30.0.13"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
#    external_links:
#      - zoo1
#      - zoo2
#      - zoo3

  kafka_exporter:
    image: danielqsj/kafka-exporter
    restart: always
    hostname: kafka-exporter
    container_name: kafka-exporter
    privileged: true
    ports:
      - 9308:9308
#    networks:
#      - monitoring
    command: --kafka.server=kafka1:9092 --kafka.server=kafka2:9093 --kafka.server=kafka3:9094
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  prometheus:
    image: prom/prometheus:v2.27.1
    restart: always
    hostname: prometheus
    container_name: prometheus
    privileged: true
    ports:
      - 9090:9090
    volumes:
      - ./docker/image/prometheus-cluster.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - kafka_exporter

  grafana:
    image: grafana/grafana:7.5.2
    restart: always
    hostname: grafana
    container_name: grafana
    privileged: true
    ports:
      - 3000:3000
    user: "104"
    #    volumes:
    #      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus

networks:
  kafka:
    external:
      name: kafka
